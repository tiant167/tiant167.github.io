{"version":3,"sources":["components/Header.tsx","components/Layout.tsx","components/Category.tsx","components/Home.tsx","data/index.tsx","components/404.tsx","components/Detail.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.less","data/anti-spam-system.md","data/argon2.md"],"names":["Header","className","css","Nav","NavMenu","to","role","aria-label","Layout","props","App","Body","children","Category","data","map","article","CategoryListItem","key","id","title","CreatedAt","moment","createdAt","format","Home","CategoryHeader","Date","content","require","NotFound","Detail","match","params","find","item","state","this","fetch","text","setState","DetailMarkdown","source","React","Component","About","exact","path","render","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.54cb7c74.chunk.js","sourcesContent":["import React from 'react';\nimport css from '../App.module.less'\nimport { Link } from 'react-router-dom';\n\nconst Header: React.FunctionComponent = () => {\n  return (\n    <div className=\"Header\">\n      <ul className={css.Nav}>\n        <li><Link className={css.NavMenu} to=\"/\"><span role=\"img\" aria-label=\"ok\">üëå</span></Link></li>\n        <li><Link className={css.NavMenu} to=\"/\">Home</Link></li>\n        <li><Link className={css.NavMenu} to=\"/about\">About</Link></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\nimport Header from './Header';\nimport css from '../App.module.less';\n\nconst Layout: React.FunctionComponent = (props) => {\n  return (\n    <div className={css.App}>\n      <Header />\n      <div className={css.Body}>\n        { props.children }\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react';\nimport css from '../App.module.less'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom';\nimport { Article } from '../global'\n\nconst Category: React.FunctionComponent<{data: Article[]}> = (props: { data: Article[] }) => {\n  return (\n      <ul className={css.Category}>\n        { props.data.map(article => (\n          <li className={css.CategoryListItem} key={article.id}>\n            <Link to={`/p/${article.id}`}>{article.title}</Link>\n            <p className={css.CreatedAt}>Created At: {moment(article.createdAt).format('YYYY-MM-DD')}</p>\n          </li>\n        ))}\n      </ul>\n  )\n}\n\nexport default Category\n","import React from 'react';\nimport Category from './Category';\nimport { Article } from '../global'\nimport css from '../App.module.less'\n\nconst Home = (props: { data: Article[] }) => (\n  <div>\n    <h1 className={css.CategoryHeader}>My Blog</h1>\n    <Category data={props.data}/>\n  </div>\n)\n\nexport default Home\n","export default [\n  { id: \"anti-spam-system\", title: \"Âç≥ÂàªÂèçÂûÉÂúæÁ≥ªÁªüËÆæËÆ°\", createdAt: new Date(\"2019-08-03T12:00:11.000Z\"), content: require('./anti-spam-system.md') },\n  { id: \"argon2\", title: \"Argon2, Memory-Hard Hash Function\", createdAt: new Date(\"2019-08-03T12:00:11.000Z\"), content: require('./argon2.md') }\n]\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h1>404 - Not Found</h1>\n    <p>Check your url path</p>\n  </div>\n)\n\nexport default NotFound\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport data from '../data'\nimport NotFound from './404';\nimport ReactMarkdown from 'react-markdown'\nimport { Article } from '../global';\nimport moment from 'moment';\nimport css from '../App.module.less'\n\nexport default class Detail extends React.Component<RouteComponentProps<{id: string}>, {article?: Article,content: string}> {\n  constructor(props: RouteComponentProps<{id: string}>) {\n    super(props)\n    const { match: { params } } = props;\n    const id = params.id\n    const article = data.find(item => item.id === id)\n    this.state = {\n      article,\n      content: '',\n    }\n  }\n\n  async componentDidMount() {\n    if (this.state.article) {\n      const content = await fetch(this.state.article.content)\n      this.setState({\n        content: await content.text(),\n      })\n    }\n  }\n\n  render() {\n    if (!this.state.article) {\n      return (\n        <NotFound />\n      )\n    }\n    return (\n      <div>\n        {/* <h2>{ this.state.article.title }</h2> */}\n        <em>Written in { moment(this.state.article.createdAt).format('YYYY-MM-DD') }</em>\n        <ReactMarkdown className={css.DetailMarkdown} source={this.state.content} />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport {\n  HashRouter as Router,\n  Route,\n} from 'react-router-dom'\nimport Detail from './components/Detail';\nimport data from './data'\n\nconst About = () => (\n  <div>About Page</div>\n)\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        {/* exact ÊòØÂõ†‰∏∫ / ‰ºöÂåπÈÖçÊâÄÊúâÁöÑ path */}\n        <Route exact path=\"/\" render={(props) => <Home { ...props } data={data}/>}  />\n        <Route path=\"/p/:id\" component={Detail} />\n        <Route path=\"/about\" component={About} />\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"_2rTfnfICaApqnf6hoEtIVS\",\"Nav\":\"_3IuRrL4HTCRmvAOvTm_qIr\",\"NavMenu\":\"_3opUj-GCCBZD6O-5GTIAj3\",\"CategoryHeader\":\"_3TQ5sSb6mcQG15txuiuQJX\",\"Category\":\"wDf0uqgNw-UKplQEq2HXd\",\"CategoryListItem\":\"_1e8Ob6ak6ZPkqRAeeXtuMm\",\"CreatedAt\":\"_1wv4sEf9qJzYsebXPKKUo-\",\"DetailMarkdown\":\"_2Kvk47tRr2JWyqIXmOnf-X\"};","module.exports = __webpack_public_path__ + \"static/media/anti-spam-system.b1f38122.md\";","module.exports = __webpack_public_path__ + \"static/media/argon2.6e6fecc7.md\";"],"sourceRoot":""}